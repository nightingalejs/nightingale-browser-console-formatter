{"version":3,"sources":["../../src/index.js"],"names":[],"mappings":";;;;;kBA4BwB,M;;AA5BxB;;;;;;;;;;;;;;AAEA,SAAS,KAAT,CAAe,MAAf,EAAuB,MAAvB,EAA+B;AAC3B,WAAO,OAAO,GAAP,CAAW;AAAA,eAAa,uCAAiB,SAAjB,CAAb;AAAA,KAAX,EAAqD,IAArD,CAA0D,IAA1D,CAAP;AACH;;;;;;EAED,SAAS,aAAT,CAAuB,MAAvB,EAA+B,cAA/B,EAA+C;AAC3C,QAAM,OAAO,OAAO,IAAP,CAAY,MAAZ,CAAb;;AAEA,QAAI,KAAK,MAAL,KAAgB,CAApB,EAAuB;AACnB;AACH;;AAED,SAAK,IAAL,CAAU,MAAM,CAAC,OAAD,EAAU,MAAV,CAAN,CAAV;AACA,oBAAc,KAAK,GAAL,CAAS,eAAO;AAAA;;AAC1B,YAAM,SAAS,kBAAkB,eAAe,GAAf,CAAlB,IAAyC,EAAxD;AACA,aAAK,IAAL,CAAU,MAAM,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,CAAN,CAAV;AACA,aAAK,IAAL,CAAU,MAAM,SAAC,OAAD,GAAU,MAAV,gCAAoB,MAApB,EAAN,CAAV;AACA,aAAK,IAAL,CAAU,MAAM,CAAC,OAAD,EAAU,MAAV,CAAN,CAAV;;AAEA,sBAAY,GAAZ,YAAsB,KAAK,SAAL,CAAe,OAAO,GAAP,CAAf,CAAtB;AACH,KAPa,EAOX,IAPW,CAON,IAPM,CAAd;AAQH;;;;;;;;;EAMc,SAAS,MAAT,CAAgB,MAAhB,EAAwB;AACnC,QAAI,SAAS,EAAb;AACA,QAAM,OAAO,EAAb;;AAEA,QAAI,OAAO,GAAX,EAAgB;AACZ,yBAAe,OAAO,GAAtB;AACA,aAAK,IAAL,CAAU,MAAM,CAAC,MAAD,CAAN,CAAV;AACH;;AAED,QAAI,OAAO,QAAX,EAAqB;AACjB,YAAI,OAAO,MAAP,KAAkB,CAAtB,EAAyB;AACrB,sBAAU,GAAV;AACH;;AAED,aAAK,IAAL,CAAU,MAAM,CAAC,MAAD,EAAS,MAAT,CAAN,CAAV;AACA,yBAAe,OAAO,QAAP,CAAgB,YAAhB,GAA+B,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAAf;AACH;;AAED,QAAI,UAAU,OAAO,MAAP,IAAiB,oCAAc,OAAO,KAArB,CAA/B;AACA,QAAI,SAAS,OAAO,MAAP,IAAiB,oCAAc,OAAO,KAArB,CAA9B;;AAEA,QAAI,OAAO,OAAX,EAAoB;AAChB,YAAI,WAAW,QAAQ,MAAR,KAAmB,CAAlC,EAAqC;AACjC,6BAAe,OAAO,OAAtB;AACH,SAFD,MAEO;AACH,sBAAU,OAAO,OAAjB;AACH;AACJ;;AAED,QAAI,MAAJ,EAAY;AACR,yBAAe,OAAf;AACA,aAAK,IAAL,CAAU,MAAM,MAAN,CAAV;AACH;;AAED,QAAI,OAAO,MAAP,KAAkB,CAAtB,EAAyB;AACrB,kBAAU,GAAV;AACH;;AAED,cAAU,OAAV;;AAEA,QAAI,OAAO,QAAX,EAAqB;AACjB,YAAM,eAAe,cAAc,OAAO,QAArB,EAA+B,OAAO,cAAtC,EAAsD,IAAtD,CAArB;;AAEA,YAAI,YAAJ,EAAkB;AACd,gBAAI,OAAO,MAAP,KAAkB,CAAtB,EAAyB;AACrB,0BAAU,GAAV;AACH;;AAED,sBAAU,YAAV;AACH;AACJ;;AAED,YACI,MADJ,SAEO,IAFP;AAIH","file":"index.js","sourcesContent":["import { levelToSymbol, levelToStyles, styleToHtmlStyle } from 'nightingale-formatter';\n\nfunction style(styles, string) {\n    return styles.map(styleName => styleToHtmlStyle[styleName]).join('; ');\n}\n\nfunction displayObject(object, metadataStyles) {\n    const keys = Object.keys(object);\n\n    if (keys.length === 0) {\n        return;\n    }\n\n    args.push(style(['reset', 'gray']));\n    return `%c{ ${keys.map(key => {\n        const styles = metadataStyles && metadataStyles[key] || [];\n        args.push(style(['reset', 'gray', 'bold']));\n        args.push(style(['reset'].concat(...styles)));\n        args.push(style(['reset', 'gray']));\n\n        return `%c${key}: %c${JSON.stringify(object[key])}%c`;\n    }).join(', ')} }`;\n}\n\n/**\n * @param {Object} record\n * @returns {string}\n */\nexport default function format(record) {\n    let string = '';\n    const args = [];\n\n    if (record.key) {\n        string += `%c${record.key}`;\n        args.push(style(['gray']));\n    }\n\n    if (record.datetime) {\n        if (string.length !== 0) {\n            string += ' ';\n        }\n\n        args.push(style(['gray', 'bold']));\n        string += `%c${record.datetime.toTimeString().split(' ')[0]}`;\n    }\n\n    let message = record.symbol || levelToSymbol[record.level];\n    let styles = record.styles || levelToStyles[record.level];\n\n    if (record.message) {\n        if (message && message.length !== 0) {\n            message += ` ${record.message}`;\n        } else {\n            message = record.message;\n        }\n    }\n\n    if (styles) {\n        message = `%c${message}`;\n        args.push(style(styles));\n    }\n\n    if (string.length !== 0) {\n        string += ' ';\n    }\n\n    string += message;\n\n    if (record.metadata) {\n        const stringObject = displayObject(record.metadata, record.metadataStyles, args);\n\n        if (stringObject) {\n            if (string.length !== 0) {\n                string += ' ';\n            }\n\n            string += stringObject;\n        }\n    }\n\n    return [\n        string,\n        ...args,\n    ];\n}\n"]}